---
# tasks file for na-ontap-cluster-config
- name: Setup licenses
  na_ontap_license:
    state: present
    license_codes: '{{ license_codes }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  when: license_codes is defined and license_codes != None
- name: Create Aggregates
  na_ontap_aggregate:
    state: present
    service_state: online
    name: '{{ item.name }}'
    nodes: '{{ item.node }}'
    disk_count: '{{ item.disk_count }}'
    raid_size: '{{ item.max_raid }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ Aggregates_Setup }}'
  when: Aggregates_Setup is defined and Aggregates_Setup != None
- name: Modify adapter
  na_ontap_ucadapter:
    state: present
    adapter_name: '{{ item.port }}'
    node_name: '{{ item.node }}'
    mode: fc
    type: target
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ FCP_Ports }}'
  when: FCP_Ports is defined and FCP_Ports != None
- name: Remove ports from Default broadcast domain
  na_ontap_broadcast_domain_ports:
    state: absent
    broadcast_domain: Default
    ports: '{{ item.node }}:{{ item.port }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ Network_Port_Setup }}'
  when: Network_Port_Setup is defined and Network_Port_Setup != None
- name: Modify Net Port
  na_ontap_net_port:
    state: present
    node: '{{ item.node }}'
    port: '{{ item.port }}'
    mtu: '{{ item.mtu }}'
    autonegotiate_admin: '{{ autonegotiate }}'
    flowcontrol_admin: '{{ flowcontrol }}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ Network_Port_Setup }}'
  when: Network_Port_Setup is defined and Network_Port_Setup != None
- name: Create Interface Group
  na_ontap_net_ifgrp:
    state: present
    distribution_function: '{{ distribution_function }}'
    name: '{{ item.name }}'
    ports: '{{ item.ports }}'
    mode: '{{ item.mode if item.mode is defined else ifgrp_mode }}'
    node: '{{ item.node}}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ IF_Group_Configuration  }}'
  when: IF_Group_Configuration is defined and IF_Group_Configuration != None
  register: ifgrpstatus
- name: Modify Net Port
  na_ontap_net_port:
    state: present
    node: '{{ item.node }}'
    port: '{{ item.name }}'
    mtu: '{{ item.mtu }}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ IF_Group_Configuration }}'
  when: IF_Group_Configuration is defined and IF_Group_Configuration != None
  register: ifgrpportstatus
- name: Wait 30 seconds for IFGRP configuration
  pause:
    seconds: 30
  when: ifgrpstatus.changed or ifgrpportstatus.changed
- name: Create VLAN
  na_ontap_net_vlan:
    state: present
    vlanid: '{{ item.id }}'
    node: '{{ item.node }}'
    parent_interface: '{{ item.port }}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ VLAN_Configuration }}'
  when: VLAN_Configuration is defined and VLAN_Configuration != None
- name: Create broadcast domain
  na_ontap_broadcast_domain:
    state: present
    broadcast_domain: '{{ item.name }}'
    mtu: '{{ item.mtu }}'
    ipspace: '{{ bcast_ipspace }}'
    ports: '{{ item.ports }}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ Broadcast_Domain_Configuration }}'
  when: Broadcast_Domain_Configuration is defined and Broadcast_Domain_Configuration != None
- name: Add ports to Broadcast Domain
  na_ontap_broadcast_domain_ports:
    state: present
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
    broadcast_domain: '{{ item.name }}'
    ports: '{{ item.ports }}'
  with_items: '{{ Broadcast_Domain_Configuration }}'
  when: Broadcast_Domain_Configuration is defined and Broadcast_Domain_Configuration != None
- name: Create Intercluster Lif
  na_ontap_interface:
    state: present
    interface_name: '{{ item.name }}'
    home_port: '{{ item.port }}'
    home_node: '{{ item.node }}'
    role: intercluster
    admin_status: up
    failover_policy: local-only
    is_auto_revert: true
    address: '{{ item.address }}'
    netmask: '{{ item.netmask }}'
    vserver: '{{ cluster_name }}'
    username: '{{ username }}'
    password: '{{ password }}'
    hostname: '{{ hostname }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ inters }}'
  when: inters is defined and inters != None
