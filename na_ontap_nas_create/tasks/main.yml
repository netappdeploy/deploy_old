---
- name: Create Policy
  na_ontap_export_policy:
    state: present
    name: '{{ item.name }}'
    vserver: '{{ item.vserver }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ NFS_Exports }}'
  when: NFS_Exports is defined and NFS_Exports != None
- name: Setup rules
  na_ontap_export_policy_rule:
    state: present
    policy_name: '{{ item.name }}'
    vserver: '{{ item.vserver }}'
    rule_index: '{{ item.rule_index if item.rule_index is defined else omit }}'
    client_match: '{{ item.client_match }}'
    ro_rule: '{{ item.ro_rule }}'
    rw_rule: '{{ item.rw_rule }}'
    super_user_security: '{{ item.superuser }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ NFS_Exports }}'
  when: NFS_Exports is defined and NFS_Exports != None
- name: Create volume
  na_ontap_volume:
    state: present
    name: '{{ item.name }}'
    aggregate_name: '{{ item.aggregate }}'
    size: '{{ item.size }}'
    size_unit: gb
    policy: "{{ 'default' if item.protocol.lower() == 'cifs' or item.policy is not defined else item.policy }}"
    junction_path: '{{ item.junction_path }}'
    space_guarantee: '{{ item.space_guarantee }}'
    volume_security_style: '{{ item.volume_security_style }}'
    percent_snapshot_space: '{{ item.percent_snapshot_space }}'
    vserver: '{{ item.vserver }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ Volume_Setup }}'
  when: Volume_Setup is defined and Volume_Setup != None and (item.protocol.lower() == 'cifs' or item.protocol.lower() == 'nfs')
- name: Create Share
  na_ontap_cifs:
    state: present
    share_name: '{{ item.share_name }}'
    path: '{{ item.path }}'
    vserver: '{{ item.vserver }}'
    hostname: '{{ hostname }}'
    username: '{{ username }}'
    password: '{{ password }}'
    ontapi: '{{ ontap_facts.ontap_version }}'
    https: true
    validate_certs: false
  with_items: '{{ CIFS_Shares }}'
  when: CIFS_Shares is defined and CIFS_Shares != None
